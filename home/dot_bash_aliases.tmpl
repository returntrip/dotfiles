# User specific aliases and functions loaded by `~/.bashrc`

## addalias function to add aliases to `.bash_aliases` and source the file
addalias() {
    printf "alias %s='%s'\n" "$1" "$2" >> ~/.bash_aliases
    source ~/.bash_profile
}

## ssh start $SHELL if tmux not found
ssh () {
    {{- if eq .chezmoi.os "linux" }}
    {{-  if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
    gpg-connect-agent -q updatestartuptty /bye > /dev/null
    {{-  end }}
    {{- end }}
    TERM=xterm
    if [ $# -lt 2 ]; then
        if  [ $# -eq 1 ] && [[ ! "$*" =~ ^-.* ]]; then
            command ssh -t "$@" -- 'tmux -u new -A -D -s 0 2>/dev/null || "$SHELL"'
        else
            command ssh
        fi
    elif [ $# -gt 1 ]; then
        command ssh "$@"
    fi
}

## PGP Enc/Dec functions
secret () {
        output=~/"${1}".$(date +%s).enc
        gpg --encrypt --armor --output "${output}" -r 0xE8D9210D206385D6 -r stefano@figura.im "${1}" && echo "${1} -> ${output}"
}

reveal () {
        output=$(echo "${1}" | rev | cut -c16- | rev)
        gpg --decrypt --output "${output}" "${1}" && echo "${1} -> ${output}"
}

## Coloured `ls`
alias ls='ls --color=auto'

## Coloured `less`
export LESS=-R
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin blink
export LESS_TERMCAP_md=$'\E[1;36m'     # begin bold
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin reverse video
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline
export GROFF_NO_SGR=1                  # for gnome-terminal 

## Coloured `grep`
alias grep='grep --color=auto'

## Interactive cp, mv and rm commands
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'

## Coloured diff
alias diff='diff --color=auto'

## Coloured `dmesg`
alias dmesg='dmesg --color=always'

{{- if eq .chezmoi.os "linux" }}
{{-  if (or (eq .chezmoi.hostname "t490s-sb") (.chezmoi.kernel.osrelease | lower | contains "microsoft")) }}
# nvim
alias vim='nvim'
{{-  end }}
{{- end }}

{{- if eq .chezmoi.hostname "rauros" }}
# Find $command in homebrew container
## Fetch the list of Distrobox containers and store it in a global variable
if [ ! -n "$container" ]; then
CONTAINERS=$(distrobox list | awk 'NR>1 {print $3}')
mapfile -t CONTAINERS <<< "$CONTAINERS"
command_not_found_handle() {
  local COMMAND="$1"
  shift
  local ARGS="$@"
  local PATH="$PATH":/home/linuxbrew/.linuxbrew/bin/
  for CONTAINER in "${CONTAINERS[@]}"; do
    if distrobox-enter --name "$CONTAINER" -- which "$COMMAND" > /dev/null 2>&1; then
      distrobox-enter --name "$CONTAINER" -- "$COMMAND $ARGS"
      return
    fi
  done
  echo "$COMMAND: could not be found."
  return 127
}
fi
{{- end }}

{{- if stat "/usr/bin/exa" }}
alias tree='exa --tree'
{{- end }}

{{- if stat "/usr/bin/terraform" }}
# terraform auto complete
complete -C /usr/bin/terraform terraform
{{- end }}

{{- if eq .chezmoi.hostname "rauros" }}
alias codium='toolbox run --container vscode bash -l -c codium'
{{- end }}

alias exip='curl -s https://checkip.amazonaws.com'
